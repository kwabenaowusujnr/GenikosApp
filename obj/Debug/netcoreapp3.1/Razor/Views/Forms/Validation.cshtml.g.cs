#pragma checksum "E:\PROJECTS\GENIKOS\GenikosApp\Views\Forms\Validation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "684994cf01f8b8b6e44f6a7356b67e25beebaa98"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Forms_Validation), @"mvc.1.0.view", @"/Views/Forms/Validation.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\PROJECTS\GENIKOS\GenikosApp\Views\_ViewImports.cshtml"
using GenikosApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\PROJECTS\GENIKOS\GenikosApp\Views\_ViewImports.cshtml"
using GenikosApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"684994cf01f8b8b6e44f6a7356b67e25beebaa98", @"/Views/Forms/Validation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c9280cd403e9114f41b42698cec59645e918c4a4", @"/Views/_ViewImports.cshtml")]
    public class Views_Forms_Validation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("#"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/parsleyjs/parsley.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            DefineSection("styles", async() => {
                WriteLiteral("\r\n\r\n");
            }
            );
            WriteLiteral(@"    <div class=""row"">
        <div class=""col-lg-6"">
            <div class=""card m-b-20"">
                <div class=""card-body"">

                    <h4 class=""mt-0 header-title"">Validation type</h4>
                    <p class=""text-muted m-b-30 "">
                        Parsley is a javascript form validation
                        library. It helps you provide your users with feedback on their form
                        submission before sending it to your server.
                    </p>

                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "684994cf01f8b8b6e44f6a7356b67e25beebaa985055", async() => {
                WriteLiteral(@"
                        <div class=""form-group"">
                            <label>Required</label>
                            <input type=""text"" class=""form-control"" required placeholder=""Type something"" />
                        </div>

                        <div class=""form-group"">
                            <label>Equal To</label>
                            <div>
                                <input type=""password"" id=""pass2"" class=""form-control"" required
                                       placeholder=""Password"" />
                            </div>
                            <div class=""m-t-10"">
                                <input type=""password"" class=""form-control"" required
                                       data-parsley-equalto=""#pass2""
                                       placeholder=""Re-Type Password"" />
                            </div>
                        </div>

                        <div class=""form-group"">
                            <label>E-M");
                WriteLiteral(@"ail</label>
                            <div>
                                <input type=""email"" class=""form-control"" required
                                       parsley-type=""email"" placeholder=""Enter a valid e-mail"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>URL</label>
                            <div>
                                <input parsley-type=""url"" type=""url"" class=""form-control""
                                       required placeholder=""URL"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Digits</label>
                            <div>
                                <input data-parsley-type=""digits"" type=""text""
                                       class=""form-control"" required
                                       placeholder=""Enter only digits"" />
    ");
                WriteLiteral(@"                        </div>
                        </div>
                        <div class=""form-group"">
                            <label>Number</label>
                            <div>
                                <input data-parsley-type=""number"" type=""text""
                                       class=""form-control"" required
                                       placeholder=""Enter only numbers"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Alphanumeric</label>
                            <div>
                                <input data-parsley-type=""alphanum"" type=""text""
                                       class=""form-control"" required
                                       placeholder=""Enter alphanumeric value"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Tex");
                WriteLiteral(@"tarea</label>
                            <div>
                                <textarea required class=""form-control"" rows=""5""></textarea>
                            </div>
                        </div>
                        <div class=""form-group"">
                            <div>
                                <button type=""submit"" class=""btn btn-primary waves-effect waves-light"">
                                    Submit
                                </button>
                                <button type=""reset"" class=""btn btn-secondary waves-effect m-l-5"">
                                    Cancel
                                </button>
                            </div>
                        </div>
                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                </div>
            </div>
        </div> <!-- end col -->

        <div class=""col-lg-6"">
            <div class=""card m-b-20"">
                <div class=""card-body"">

                    <h4 class=""mt-0 header-title"">Range validation</h4>
                    <p class=""text-muted m-b-30 "">
                        Parsley is a javascript form validation
                        library. It helps you provide your users with feedback on their form
                        submission before sending it to your server.
                    </p>

                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "684994cf01f8b8b6e44f6a7356b67e25beebaa9811093", async() => {
                WriteLiteral(@"

                        <div class=""form-group"">
                            <label>Min Length</label>
                            <div>
                                <input type=""text"" class=""form-control"" required
                                       data-parsley-minlength=""6"" placeholder=""Min 6 chars."" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Max Length</label>
                            <div>
                                <input type=""text"" class=""form-control"" required
                                       data-parsley-maxlength=""6"" placeholder=""Max 6 chars."" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Range Length</label>
                            <div>
                                <input type=""text"" class=""form-control"" required
                      ");
                WriteLiteral(@"                 data-parsley-length=""[5,10]""
                                       placeholder=""Text between 5 - 10 chars length"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Min Value</label>
                            <div>
                                <input type=""text"" class=""form-control"" required
                                       data-parsley-min=""6"" placeholder=""Min value is 6"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Max Value</label>
                            <div>
                                <input type=""text"" class=""form-control"" required
                                       data-parsley-max=""6"" placeholder=""Max value is 6"" />
                            </div>
                        </div>
                        <div class=""form-group"">
     ");
                WriteLiteral(@"                       <label>Range Value</label>
                            <div>
                                <input class=""form-control"" required type=""text range"" min=""6""
                                       max=""100"" placeholder=""Number between 6 - 100"" />
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label>Regular Exp</label>
                            <div>
                                <input type=""text"" class=""form-control"" required
                                       data-parsley-pattern=""#[A-Fa-f0-9]{6}""
                                       placeholder=""Hex. Color"" />
                            </div>
                        </div>

                        <div class=""form-group m-b-0"">
                            <div>
                                <button type=""submit"" class=""btn btn-primary waves-effect waves-light"">
                                    Submit
    ");
                WriteLiteral(@"                            </button>
                                <button type=""reset"" class=""btn btn-secondary waves-effect m-l-5"">
                                    Cancel
                                </button>
                            </div>
                        </div>
                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n                </div>\r\n            </div>\r\n        </div> <!-- end col -->\r\n    </div> <!-- end row -->\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "684994cf01f8b8b6e44f6a7356b67e25beebaa9816205", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <script type=\"text/javascript\">\r\n        $(document).ready(function () {\r\n            $(\'form\').parsley();\r\n        });\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
